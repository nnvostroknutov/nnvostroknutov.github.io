{"version":3,"sources":["components/counter.jsx","components/graph1.jsx","components/graph2.jsx","components/calculator.jsx","App.js","index.js","images/graph.PNG"],"names":["Counter","state","count","address","street","className","Component","Graph1","src","graph","React","Graph2","useState","modalDate","setModalDate","show","setShow","handleClose","Provider","value","onClick","Modal","onHide","Header","closeButton","Title","Body","selected","onChange","date","selectsStart","dateFormat","locale","ToggleButtonGroup","name","ToggleButton","type","InputGroup","FormControl","aria-describedby","Append","Text","id","Footer","Button","registerLocale","ru","Calculator","selectedStartDate","setSelectedStartDate","selectedLastDate","setSelectedLastDate","showGraph1","toggleShowGraph1","showGraph2","toggleShowGraph2","isWeekday","day","getDay","startDate","endDate","filterDate","selectsEnd","minDate","addDays","placeholder","App","class","key","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0d71380b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    count: 0,\r\n    address: {\r\n      street: \"hello\"\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"toolbar\">\r\n        <nav className=\"toolbar_nav\">\r\n          <div className=\"toolbar_logo\">\r\n            <b className=\"logo_letters\">DR SERVICE</b>\r\n          </div>\r\n          <div className=\"toolbar_nav_items\">\r\n            <button className=\"ems-btn default\">Нагрузки</button>\r\n            <button className=\"ems-btn default\">Импорт</button>\r\n            <button className=\"ems-btn default\">Устройства</button>\r\n            <button className=\"ems-btn default\">Scenarios</button>\r\n            <button className=\"ems-btn default\">Калькулятор</button>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component, useState } from \"react\";\r\n// import Calendary from \"./components/calendary\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport graph from \"../images/graph.PNG\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaCog } from \"react-icons/fa\";\r\nimport { addDays, getDay } from \"date-fns\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  ButtonGroup,\r\n  InputGroup,\r\n  FormControl,\r\n  ToggleButton,\r\n  ToggleButtonGroup\r\n} from \"react-bootstrap\";\r\n\r\nclass Graph1 extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"graph-form\">\r\n        <div className=\"graph-form-bar\">\r\n          <h5 className=\"calculator-title\">График Базовой Нагрузки</h5>\r\n        </div>\r\n        <div className=\"graph-data-container\">\r\n          <div className=\"graph-image-container\">\r\n            <img className=\"graph-image\" src={graph}></img>\r\n          </div>\r\n          <div className=\"graph-stats-container\">\r\n            <p>RRMSE:</p>\r\n            <p>δ:</p>\r\n            <p>RRMSE:</p>\r\n            <p>δ:</p>\r\n            <p>RRMSE:</p>\r\n            <p>δ:</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph1;\r\n","import React, { Component, useState } from \"react\";\r\n// import Calendary from \"./components/calendary\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport graph from \"../images/graph.PNG\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaCog } from \"react-icons/fa\";\r\nimport { addDays, getDay } from \"date-fns\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  ButtonGroup,\r\n  InputGroup,\r\n  FormControl,\r\n  ToggleButton,\r\n  ToggleButtonGroup\r\n} from \"react-bootstrap\";\r\n\r\nfunction Graph2() {\r\n  // Показ модального окна\r\n\r\n  const [modalDate, setModalDate] = useState(null);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <div className=\"graph-form\">\r\n      <div className=\"graph-form-bar\">\r\n        <h5 className=\"calculator-title\">График Разгрузки</h5>\r\n        <IconContext.Provider value={{ className: \"default-icon\" }}>\r\n          <div>\r\n            <FaCog onClick={handleShow} />\r\n          </div>\r\n        </IconContext.Provider>\r\n      </div>\r\n      <div className=\"graph-data-container\">\r\n        <div className=\"graph-image-container\">\r\n          <img className=\"graph-image\" src={graph}></img>\r\n        </div>\r\n        <div className=\"graph-stats-container\">\r\n          <p>Снижение 1:</p>\r\n          <p>Снижение 2:</p>\r\n          <p>Снижение 3:</p>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Настройка параметров</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"modal-element\">\r\n            <h6 className=\"calculator-title\">Начало разгрузки:</h6>\r\n            <DatePicker\r\n              selected={modalDate}\r\n              onChange={date => setModalDate(date)}\r\n              selectsStart\r\n              // startDate={selectedStartDate}\r\n              // endDate={selectedLastDate}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              locale=\"ru\"\r\n            />\r\n          </div>\r\n          <div className=\"modal-element\">\r\n            <h6 className=\"calculator-title\">Период:</h6>\r\n            <ToggleButtonGroup name=\"hourBtn\">\r\n              <ToggleButton\r\n                className=\"ems-btn default no-left-margin\"\r\n                type=\"radio\"\r\n                name=\"hourBtn\"\r\n              >\r\n                {/* <input type=\"radio\" name=\"range\" /> */}2 часа\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                className=\"ems-btn default\"\r\n                type=\"radio\"\r\n                name=\"hourBtn\"\r\n              >\r\n                {/* <input type=\"radio\" name=\"range\" /> */}4 часа\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </div>\r\n          <div className=\"modal-element\">\r\n            <h6 className=\"calculator-title\">Объём:</h6>\r\n            <InputGroup>\r\n              <FormControl aria-describedby=\"basic-addon2\" />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text id=\"basic-addon2\">Квт</InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div className=\"modal-buttons\">\r\n            <Button className=\"ems-btn default\" onClick={handleClose}>\r\n              Рассчитать\r\n            </Button>\r\n            <Button className=\"ems-btn default\" onClick={handleClose}>\r\n              Отмена\r\n            </Button>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph2;\r\n","import React, { Component, useState } from \"react\";\r\n// import Calendary from \"./components/calendary\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport graph from \"../images/graph.PNG\";\r\nimport Graph1 from \"./graph1\";\r\nimport Graph2 from \"./graph2\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaCog } from \"react-icons/fa\";\r\nimport { addDays, getDay } from \"date-fns\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  ButtonGroup,\r\n  InputGroup,\r\n  FormControl,\r\n  ToggleButton,\r\n  ToggleButtonGroup\r\n} from \"react-bootstrap\";\r\nimport ru from \"date-fns/locale/ru\";\r\n\r\nregisterLocale(\"ru\", ru);\r\n\r\nfunction Calculator() {\r\n  // Даты для календаря\r\n\r\n  const [selectedStartDate, setSelectedStartDate] = useState(null);\r\n  const [selectedLastDate, setSelectedLastDate] = useState(null);\r\n  const [showGraph1, toggleShowGraph1] = useState(false);\r\n  const [showGraph2, toggleShowGraph2] = useState(false);\r\n\r\n  // Проверка на выходной\r\n\r\n  const isWeekday = date => {\r\n    const day = getDay(date);\r\n    return day !== 0 && day !== 6;\r\n  };\r\n\r\n  // Весь калькулятор\r\n\r\n  return (\r\n    <div className=\"calculator-container\">\r\n      <div className=\"calculator-form\">\r\n        <div className=\"calculator-date calculator-item\">\r\n          <h5 className=\"calculator-title\">Выберите дату:</h5>\r\n          <div className=\"calculator-line-elements\">\r\n            <DatePicker\r\n              selected={selectedStartDate}\r\n              onChange={date => setSelectedStartDate(date)}\r\n              selectsStart\r\n              startDate={selectedStartDate}\r\n              endDate={selectedLastDate}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              filterDate={isWeekday}\r\n              locale=\"ru\"\r\n            />\r\n            <span className=\"dash\">&mdash;</span>\r\n            <DatePicker\r\n              selected={selectedLastDate}\r\n              onChange={date => setSelectedLastDate(date)}\r\n              selectsEnd\r\n              startDate={selectedStartDate}\r\n              endDate={selectedLastDate}\r\n              minDate={addDays(selectedStartDate, 20)}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              filterDate={isWeekday}\r\n              locale=\"ru\"\r\n              //   placeholderText=\"Выберите не менее чем 20 дней\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"calculator-range calculator-item\">\r\n          <h5 className=\"calculator-title\">Выберите промежуток:</h5>\r\n          <div className=\"calculator-line-elements\">\r\n            <ToggleButtonGroup name=\"rangeBtn\">\r\n              <ToggleButton\r\n                className=\"ems-btn default no-left-margin\"\r\n                type=\"radio\"\r\n                name=\"rangeBtn\"\r\n              >\r\n                {/* <input type=\"radio\" name=\"range\" /> */}\r\n                Каждый час\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                className=\"ems-btn default\"\r\n                type=\"radio\"\r\n                name=\"rangeBtn\"\r\n              >\r\n                {/* <input type=\"radio\" name=\"range\" /> */}\r\n                Каждые полчаса\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </div>\r\n        </div>\r\n        <div className=\"calculator-values calculator-item\">\r\n          <h5 className=\"calculator-title\">Вставьте столбцы со значениями:</h5>\r\n          <textarea\r\n            className=\"calculator-textarea\"\r\n            placeholder=\"Вставьте нужные столбцы из таблицы\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"calculator-submit\"\r\n          onClick={() => toggleShowGraph1(!showGraph1)}\r\n        >\r\n          Рассчитать ГБН\r\n        </button>\r\n      </div>\r\n      <div className=\"graph-container\">\r\n        {showGraph1 == true ? <Graph1 /> : \"\"}\r\n        {showGraph2 == false ? (\r\n          showGraph1 == true ? (\r\n            <button\r\n              className=\"calculator-submit graph-button\"\r\n              onClick={() => toggleShowGraph2(!showGraph2)}\r\n            >\r\n              Ввести параметры разгрузки\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        ) : (\r\n          <Graph2 />\r\n        )}\r\n\r\n        {/* <Graph2 /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Counter from \"./components/counter\";\r\nimport Calculator from \"./components/calculator\";\r\nimport \"./components/counter.css\";\r\nimport \"./components/calculator.css\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Counter />\r\n        <main className=\"main-container\">\r\n          <div className=\"content\">\r\n            <nav className=\"page-header\">\r\n              <ul class=\"nav-left\">\r\n                <li>\r\n                  <h5>Калькулятор</h5>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <Calculator key=\"calculator1\" />\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/graph.4e5bcb3b.PNG\";"],"sourceRoot":""}